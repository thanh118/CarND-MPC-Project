<?xml version='1.0'?>
<html xmlns='http://www.w3.org/1999/xhtml'
      xmlns:math='http://www.w3.org/1998/Math/MathML'
>
<head>
<title>ADTape: The CppAD Tape</title>
<meta name="description" id="description" content="ADTape: The CppAD Tape"/>
<meta name="keywords" id="keywords" content=" syntax description rec "/>
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_adtape_xml.js'>
</script>
</head>
<body>
<table><tr>
<td><a href="taperec.xml" target="_top">Prev</a>
</td><td><a href="boolfunlink.xml" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADTape</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>CppAD-&gt;</option>
<option>Distribute</option>
<option>NewFeature</option>
<option>Define</option>
<option>GreaterThanZero</option>
<option>GreaterThanOrZero</option>
<option>LessThanZero</option>
<option>LessThanOrZero</option>
<option>IdenticalPar</option>
<option>IdenticalZero</option>
<option>IdenticalOne</option>
<option>IdenticalEqualPar</option>
<option>OpCode</option>
<option>printOp</option>
<option>NumInd</option>
<option>NumVar</option>
<option>tape_link</option>
<option>TapeRec</option>
<option>ADTape</option>
<option>BoolFunLink</option>
<option>Op</option>
<option>ForwardSweep</option>
<option>ReverseSweep</option>
<option>ForJacSweep</option>
<option>RevJacSweep</option>
</select>
</td>
<td>ADTape</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Description</option>
<option>Rec</option>
<option>---..Empty OpCode</option>
<option>---..Printing OpCode</option>
<option>---..Parameter</option>
<option>---..Independent</option>
<option>---..Loading Vector Element</option>
<option>---..Storing Vector Element</option>
<option>---..Op(Variable, Variable)</option>
<option>---..Op(Variable, Parameter)</option>
<option>---..Op(Parameter, Variable)</option>
<option>---..Op(Parameter, Parameter)</option>
<option>---..Op(Variable)</option>
<option>---..User Defined Functions</option>
<option>---..Variable Indexed Arrays</option>
</select>
</td>
</tr></table><br/>
 




<center><b><big><big>ADTape: The CppAD Tape</big></big></b></center>
<br/>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br/>
<code><font color="blue"><span style='white-space: nowrap'>ADTape&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i>


<br/>
<br/>
<b><big><a name="Description" id="Description">Description</a></big></b>
<br/>
For each <i>Base</i> that is used in connection with
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>, 
there must be one and only one <i>id</i> such that
<code><font color="blue"><span style='white-space: nowrap'>ADBase&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;::tape_active(</span></font></code><i><span style='white-space: nowrap'>id</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is true.
This object is used to record 
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code> operations and compute derivatives.

<br/>
<br/>
<b><big><a name="Rec" id="Rec">Rec</a></big></b>
<br/>
the <a href="taperec.xml" target="_top"><span style='white-space: nowrap'>TapeRec</span></a>
 object <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.Rec</span></font></code> contains
the currently recorded information.
This information is recorded using the following functions:

<br/>
<br/>
<b><a name="Rec.Empty OpCode" id="Rec.Empty OpCode">Empty OpCode</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordNonOp()<br/>
</span></font></code>places a NonOp in the next tape location.
This is useful for operations that must reserve extra
calculation space for forward and backward modes.

<br/>
<br/>
<b><a name="Rec.Printing OpCode" id="Rec.Printing OpCode">Printing OpCode</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordPripOp(const&#xA0;char&#xA0;*</span></font></code><i><span style='white-space: nowrap'>text</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>places, in the next tape location,
a PripOp that prints the parameter
value <i>x</i> to standard output.
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordPrivOp(const&#xA0;char&#xA0;*</span></font></code><i><span style='white-space: nowrap'>text</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>places, in the next tape location,
a PrivOp that prints the variable
corresponding to <i>x_taddr</i> to standard output.
These operators enables the user to determine the value of intermediate
variables during forward and reverse mode.


<br/>
<br/>
<b><a name="Rec.Parameter" id="Rec.Parameter">Parameter</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordParOp(const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>creates a <code><font color="blue">ParOp</font></code> record with the value 
specified by <i>z</i>.
The return value is the taddr of this operation in the tape.

<br/>
<br/>
<b><a name="Rec.Independent" id="Rec.Independent">Independent</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordInvOp(AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>creates a tape record corresponding to a new independent variable.
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value_</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordInvOp</font></code>, 
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> 
is the taddr of the new tape record. 

<br/>
<br/>
<b><a name="Rec.Loading Vector Element" id="Rec.Loading Vector Element">Loading Vector Element</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordLoadOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>offset</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;)<br/>
</span></font></code>creates a tape record corresponding to the value of a <code><font color="blue">VecAD</font></code> element.
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>Must be one of the following values:
<code><font color="blue">LdvOp</font></code>, <code><font color="blue">LdpOp</font></code>.
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
</span></font></code><i><span style='white-space: nowrap'>offset</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>is the offset where this <code><font color="blue">VecAD</font></code> array
starts in the cumulative array containing all the <code><font color="blue">VecAD</font></code> arrays.
It indexes the length of this <code><font color="blue">VecAD</font></code> array 
and the rest of the array follows.
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>provides the information necessary to retriever the taddr in for this 
element within the <code><font color="blue">VecAD</font></code> array.
This has the following meaning depending on the value of <i>op</i>:
<table><tr><td align='left'  valign='top'>

<b>op</b>    
	</td><td align='left'  valign='top'>
 <b>x_taddr</b> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">LdpOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the index in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">LdvOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the taddr as a variable in the tape
</td></tr>
</table>
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_<br/>
</span></font></code>is modified so that it corresponds to the new tape record when 
<code><font color="blue">RecordLoadOp</font></code> returns.
Upon return from <code><font color="blue">RecordLoadOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> 
is the taddr in the tape for this <i>op</i> operator. 


<br/>
<br/>
<b><a name="Rec.Storing Vector Element" id="Rec.Storing Vector Element">Storing Vector Element</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordStoreOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>offset</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>y_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;)<br/>
</span></font></code>creates a tape record corresponding to storing a new value for
a <code><font color="blue">VecAD</font></code> element.
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>Must be one of the following values:
<code><font color="blue">StvvOp</font></code>, <code><font color="blue">StpvOp</font></code>.
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
</span></font></code><i><span style='white-space: nowrap'>offset</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>is the offset where this <code><font color="blue">VecAD</font></code> array
starts in the cumulative array containing all the <code><font color="blue">VecAD</font></code> arrays.
It indexes the length of this <code><font color="blue">VecAD</font></code> array 
and the rest of the array follows.
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>provides the information necessary to retrieve the taddr for this 
<code><font color="blue">VecAD</font></code> element within this <code><font color="blue">VecAD</font></code> array.
This has the following meaning depending on the value of <i>op</i>:
<table><tr><td align='left'  valign='top'>

<b>op</b>    
	</td><td align='left'  valign='top'>
 <b>x_taddr</b> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StppOp</font></code>
	</td><td align='left'  valign='top'>
 location of the index in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StpvOp</font></code>
	</td><td align='left'  valign='top'>
 location of the index in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StvpOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the taddr as a variable in the tape  </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StvvOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the taddr as a variable in the tape 
</td></tr>
</table>
<code><font color="blue"><span style='white-space: nowrap'><br/>
<br/>
</span></font></code><i><span style='white-space: nowrap'>y_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
</span></font></code>provides the information necessary to retrieve the value for this 
<code><font color="blue">VecAD</font></code> element within this <code><font color="blue">VecAD</font></code> array.
This has the following meaning depending on the value of <i>op</i>:
<table><tr><td align='left'  valign='top'>

<b>op</b>    
	</td><td align='left'  valign='top'>
 <b>y_taddr</b> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StppOp</font></code>
	</td><td align='left'  valign='top'>
 location of the value in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StvpOp</font></code>
	</td><td align='left'  valign='top'>
 location of the value in <code><font color="blue"></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetPar</span></font></code> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StpvOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the taddr as a variable in the tape  </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">StvvOp</font></code> 
	</td><td align='left'  valign='top'>
 location of the taddr as a variable in the tape  
</td></tr>
</table>
<br/>
<b><a name="Rec.Op(Variable, Variable)" id="Rec.Op(Variable, Variable)">Op(Variable, Variable)</a></b>
<br/>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br/>
inline&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>y_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> to the corresponding taddr.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font></code><i><span style='white-space: nowrap'>y</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>where <i>x_taddr</i> is the taddr of <i>x</i> in the tape
and <i>y_taddr</i> is the taddr of <i>y</i> in the tape
(neither of these indices can be zero).
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value_</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> 
is to the taddr of the new tape record. 
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br/>
inline&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>y_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>
is the same as above except that no variable results from the 
tape operation; i.e., <code><font color="blue"><span style='white-space: nowrap'>NumVar(</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is zero.

<br/>
<br/>
<b><a name="Rec.Op(Variable, Parameter)" id="Rec.Op(Variable, Parameter)">Op(Variable, Parameter)</a></b>
<br/>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br/>
inline&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> to the corresponding taddr.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>where <i>x_taddr</i> is the taddr of <i>x</i> in the tape
(this taddr can not be zero).
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value_</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> 
is to the taddr of the new tape record. 
The value <i>p</i> corresponds to a parameter.
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br/>
inline&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;<br/>
)</span></font></code>
is the same as above except that no variable results from the 
tape operation; i.e., <code><font color="blue"><span style='white-space: nowrap'>NumVar(</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is zero.

<br/>
<br/>
<b><a name="Rec.Op(Parameter, Variable)" id="Rec.Op(Parameter, Variable)">Op(Parameter, Variable)</a></b>
<br/>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br/>
inline&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>y_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> to the corresponding taddr.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;</span></font></code><i><span style='white-space: nowrap'>y</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>where <i>y_taddr</i> is the taddr of <i>y</i> in the tape
(this taddr can not be zero).
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value_</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> 
is to the taddr of the new tape record. 
The value <i>p</i> corresponds to a parameter.
<code><span style='white-space: nowrap'><br/>
<br/>
</span></code>The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br/>
inline&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>p</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>y_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>
is the same as above except that no variable results from the 
tape operation; i.e., <code><font color="blue"><span style='white-space: nowrap'>NumVar(</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is zero.

<br/>
<br/>
<b><a name="Rec.Op(Parameter, Parameter)" id="Rec.Op(Parameter, Parameter)">Op(Parameter, Parameter)</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
inline&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>y</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>
records an operation between two parameters where
<i>x</i> is the left operand and <i>y</i> is the right operand.
No variable results from the tape operation; 
i.e., <code><font color="blue"><span style='white-space: nowrap'>NumVar(</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code> is zero.

<br/>
<br/>
<b><a name="Rec.Op(Variable)" id="Rec.Op(Variable)">Op(Variable)</a></b>
<br/>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br/>
inline&#xA0;void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;OpCode&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> to the corresponding taddr.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>op</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>where <i>x_taddr</i> is the taddr of <i>x</i> in the tape
(this taddr can not be zero) and <i>op</i> specifies the
unary function.
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value_</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> 
is to the taddr of the new tape record. 

<br/>
<br/>
<b><a name="Rec.User Defined Functions" id="Rec.User Defined Functions">User Defined Functions</a></b>
<br/>
The procedure call 
<code><font color="blue"><span style='white-space: nowrap'><br/>
void&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.RecordDisOp(<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;AD&lt;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&gt;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>x_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'>,<br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>y_taddr</span></i><code><font color="blue"><span style='white-space: nowrap'><br/>
)</span></font></code>
places a new dependent variable <i>z</i> in the tape
and sets <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> to the corresponding taddr.
The tape record specifies the operation
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;=&#xA0;</span></font></code><i><span style='white-space: nowrap'>f</span></i><code><font color="blue"><span style='white-space: nowrap'>(</span></font></code><i><span style='white-space: nowrap'>x</span></i><code><font color="blue"><span style='white-space: nowrap'>)</span></font></code><i></i> 
where <i>x_taddr</i> is the taddr of <i>x</i> in the tape
and <i>y_taddr</i> is the taddr corresponding to the 
Discrete function <i>f</i>
(the value <i>x_taddr</i> cannot be zero).
The field <code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.value_</span></font></code> is an input and all the other
fields of <i>z</i> are outputs.
Upon return from <code><font color="blue">RecordDisOp</font></code>, 
<i>z</i> is in the list of variables and
<code><font color="blue"></font></code><i><span style='white-space: nowrap'>z</span></i><code><font color="blue"><span style='white-space: nowrap'>.taddr_</span></font></code> 
is to the taddr of the new tape record. 

<br/>
<br/>
<b><a name="Rec.Variable Indexed Arrays" id="Rec.Variable Indexed Arrays">Variable Indexed Arrays</a></b>
<br/>
The procedure call
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;size_t&#xA0;</span></font></code><i><span style='white-space: nowrap'>Tape</span></i><code><font color="blue"><span style='white-space: nowrap'>.AddVec(size_t&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>length</span></i><code><font color="blue"><span style='white-space: nowrap'>,&#xA0;const&#xA0;</span></font></code><i><span style='white-space: nowrap'>Base</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;*</span></font></code><i><span style='white-space: nowrap'>data</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>adds a variable indexed array with the specified length and values to the tape.
We use <i>i</i> to denote the value returned by <code><font color="blue">AddVec</font></code>.
The value <i>length</i> is added to <i>Rec</i> as follows:
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>length</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;==&#xA0;</span></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetVecInd(</span></font></code><i><span style='white-space: nowrap'>i</span></i><code><font color="blue"><span style='white-space: nowrap'>)<br/>
</span></font></code>Upon return, 
the elements of <i>data</i> are stored in <i>Rec</i>
in the following way:
for 
<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline"><mrow>
<mi mathvariant='italic'>j</mi>
<mo stretchy="false">=</mo>
<mn>0</mn>
<mo stretchy="false">,</mo>
<mo stretchy="false">&#x02026;</mo>
<mo stretchy="false">,</mo>
<mi mathvariant='italic'>length</mi>
<mn>-1</mn>
</mrow></math>

,
<code><font color="blue"><span style='white-space: nowrap'><br/>
&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span></font></code><i><span style='white-space: nowrap'>data</span></i><code><font color="blue"><span style='white-space: nowrap'>[</span></font></code><i><span style='white-space: nowrap'>j</span></i><code><font color="blue"><span style='white-space: nowrap'>]&#xA0;==&#xA0;</span></font></code><i><span style='white-space: nowrap'>Rec</span></i><code><font color="blue"><span style='white-space: nowrap'>.GetVecInd(</span></font></code><i><span style='white-space: nowrap'>i</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;</span></font></code><i><span style='white-space: nowrap'>j</span></i><code><font color="blue"><span style='white-space: nowrap'>&#xA0;+&#xA0;1)<br/>
</span></font></code>
<hr/>Input File: cppad/local/ad_tape.hpp

</body>
</html>
