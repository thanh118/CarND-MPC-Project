<html><head>
<title>Runge45: Example and Test</title>
<meta name="description" id="description" content="Runge45: Example and Test">
<meta name="keywords" id="keywords" content=" Runge45 example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_runge45.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>library</option>
<option>Runge45</option>
<option>Runge45.cpp</option>
</select>
</td>
<td><a href="runge45.htm" target="_top">Prev</a>
</td><td><a href="rosen34.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>CppAD-&gt;</option>
<option>Install</option>
<option>Introduction</option>
<option>AD</option>
<option>ADFun</option>
<option>library</option>
<option>preprocessor</option>
<option>Example</option>
<option>Appendix</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>library-&gt;</option>
<option>ErrorHandler</option>
<option>NearEqual</option>
<option>speed_test</option>
<option>SpeedTest</option>
<option>NumericType</option>
<option>CheckNumericType</option>
<option>SimpleVector</option>
<option>CheckSimpleVector</option>
<option>nan</option>
<option>pow_int</option>
<option>Poly</option>
<option>LuDetAndSolve</option>
<option>RombergOne</option>
<option>RombergMul</option>
<option>Runge45</option>
<option>Rosen34</option>
<option>OdeErrControl</option>
<option>OdeGear</option>
<option>OdeGearControl</option>
<option>BenderQuad</option>
<option>LuRatio</option>
<option>CppAD_vector</option>
<option>TrackNewDel</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>Runge45-&gt;</option>
<option>Runge45.cpp</option>
</select>
</td>
<td>Runge45.cpp</td>
<td>Headings</td>
</tr></table><br>



<center><b><big><big>Runge45: Example and Test</big></big></b></center>
Define 
<code>
<span style='white-space: nowrap'>&nbsp;X&nbsp;:&nbsp;\R&nbsp;\rightarrow&nbsp;\R^n</span></code>
 by
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;X_i&nbsp;(t)&nbsp;=&nbsp;&nbsp;t^{i+1}<br>
\]&nbsp;</span></code>
 
for <code>
<span style='white-space: nowrap'>&nbsp;i&nbsp;=&nbsp;1&nbsp;,&nbsp;\ldots&nbsp;,&nbsp;n-1</span></code>
.
It follows that
<code>
<span style='white-space: nowrap'>&nbsp;\[<br>
\begin{array}{rclr}<br>
X_i(0)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;{\rm&nbsp;for&nbsp;\;&nbsp;all&nbsp;\;}&nbsp;i&nbsp;\\<br>
X_i&nbsp;'&nbsp;(t)&nbsp;&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&nbsp;{\rm&nbsp;if&nbsp;\;}&nbsp;i&nbsp;=&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\<br>
X_i&nbsp;'(t)&nbsp;&nbsp;&nbsp;&amp;&nbsp;=&nbsp;&amp;&nbsp;(i+1)&nbsp;t^i&nbsp;=&nbsp;(i+1)&nbsp;X_{i-1}&nbsp;(t)&nbsp;&amp;&nbsp;{\rm&nbsp;if&nbsp;\;}&nbsp;i&nbsp;&gt;&nbsp;0<br>
\end{array}<br>
\]&nbsp;</span></code>

The example tests Runge45 using the relations above:

<code><font color="blue">
<pre style='display:inline'> 

# include &lt;cstddef&gt;                 // for size_t
# include &lt;cppad/runge_45.hpp&gt;      // for CppAD::Runge45
# include &lt;cppad/near_equal.hpp&gt;    // for CppAD::NearEqual
# include &lt;cppad/vector.hpp&gt;        // for CppAD::vector

namespace {
	class Fun {
	public:
		// constructor
		Fun(bool use_x_) : use_x(use_x_) 
		{ }

		// set f = x'(t)
		void Ode(
			const double                &amp;t, 
			const CppAD::vector&lt;double&gt; &amp;x, 
			CppAD::vector&lt;double&gt;       &amp;f)
		{	size_t n  = x.size();	
			double ti = 1.;
			f[0]      = 1.;
			size_t i;
			for(i = 1; i &lt; n; i++)
			{	ti *= t;
				if( use_x )
					f[i] = (i+1) * x[i-1];
				else	f[i] = (i+1) * ti;
			}
		}
	private:
		const bool use_x;

	};
}

bool Runge45(void)
{	bool ok = true;     // initial return value
	size_t i;           // temporary indices

	size_t  n = 5;      // number components in X(t) and order of method
	size_t  M = 2;      // number of Runge45 steps in [ti, tf]
	double ti = 0.;     // initial time
	double tf = 2.;     // final time 

	// xi = X(0)
	CppAD::vector&lt;double&gt; xi(n); 
	for(i = 0; i &lt;n; i++)
		xi[i] = 0.;

	size_t use_x;
	for( use_x = 0; use_x &lt; 2; use_x++)
	{	// function object depends on value of use_x
		Fun F(use_x &gt; 0); 

		// compute Runge45 approximation for X(tf)
		CppAD::vector&lt;double&gt; xf(n), e(n); 
		xf = CppAD::Runge45(F, M, ti, tf, xi, e);

		double check = tf;
		for(i = 0; i &lt; n; i++)
		{	// check that error is always positive
			ok    &amp;= (e[i] &gt;= 0.);
			// 5th order method is exact for i &lt; 5
			if( i &lt; 5 ) ok &amp;=
				CppAD::NearEqual(xf[i], check, 1e-10, 1e-10);
			// 4th order method is exact for i &lt; 4
			if( i &lt; 4 )
				ok &amp;= (e[i] &lt;= 1e-10);

			// check value for next i
			check *= tf;
		}
	}
	return ok;
}

</pre>

</font></code>


<hr>Input File: example/runge_45.cpp

</body>
</html>
