<html><head>
<title>Source: det_by_lu</title>
<meta name="description" id="description" content="Source: det_by_lu">
<meta name="keywords" id="keywords" content=" det_by_lu source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_det_by_lu.hpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="http://www.coin-or.org/CppAD/" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>speed</option>
<option>speed_utility</option>
<option>det_by_lu</option>
<option>det_by_lu.hpp</option>
</select>
</td>
<td><a href="det_by_lu.cpp.htm" target="_top">Prev</a>
</td><td><a href="speed_adolc.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>Appendix-&gt;</option>
<option>Faq</option>
<option>speed</option>
<option>Theory</option>
<option>glossary</option>
<option>Bib</option>
<option>Bugs</option>
<option>WishList</option>
<option>whats_new</option>
<option>include_deprecated</option>
<option>License</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>speed-&gt;</option>
<option>speed_utility</option>
<option>speed_adolc</option>
<option>speed_cppad</option>
<option>speed_fadbad</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>speed_utility-&gt;</option>
<option>speed_main</option>
<option>uniform_01</option>
<option>det_grad_33</option>
<option>det_of_minor</option>
<option>det_by_minor</option>
<option>det_by_lu</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>det_by_lu-&gt;</option>
<option>det_by_lu.cpp</option>
<option>det_by_lu.hpp</option>
</select>
</td>
<td>det_by_lu.hpp</td>
<td>Headings</td>
</tr></table><br>



<center><b><big><big>Source: det_by_lu</big></big></b></center>
<code><font color="blue"># ifndef CPPAD_DET_BY_LU_INCLUDED 
<code><span style='white-space: nowrap'><br>
</span></code># define CPPAD_DET_BY_LU_INCLUDED

<pre style='display:inline'> 
# include &lt;cppad/cppad.hpp&gt;
# include &lt;complex&gt;

// BEGIN CppAD namespace
namespace CppAD {

// The AD complex case is used by examples by not used by speed tests 
// Must define a specializatgion of LeqZero,AbsGeq for the ADComplex case
typedef std::complex&lt;double&gt;     Complex;
typedef CppAD::AD&lt;Complex&gt;     ADComplex;
CPPAD_BOOL_UNARY(Complex,  LeqZero )
CPPAD_BOOL_BINARY(Complex, AbsGeq )

template &lt;class Scalar&gt;
class det_by_lu {
public:
	det_by_lu(size_t n_) : m(0), n(n_), A(n_ * n_)
	{	}

	template &lt;class Vector&gt;
	inline Scalar operator()(const Vector &amp;x)
	{
		using CppAD::exp;

		Scalar         logdet;
		Scalar         det;
		int          signdet;
		size_t       i;

		// copy matrix so it is not overwritten
		for(i = 0; i &lt; n * n; i++)
			A[i] = x[i];
 
		// comput log determinant
		signdet = CppAD::LuSolve(
			n, m, A, B, X, logdet);

		// make sure the martix is not singular
		CPPAD_ASSERT_KNOWN( 
			signdet != 0,
			&quot;det_by_lu: matrix is singular&quot;
		);

		// convert to determinant
		det     = Scalar( signdet ) * exp( logdet ); 

# ifdef FADBAD
		// Fadbad requires tempories to be set to constants
		for(i = 0; i &lt; n * n; i++)
			A[i] = 0;
# endif

		return det;
	}
private:
	const size_t m;
	const size_t n;
	CppADvector&lt;Scalar&gt; A;
	CppADvector&lt;Scalar&gt; B;
	CppADvector&lt;Scalar&gt; X;
};
} // END CppAD namespace
</pre>


# endif
</font></code>


<hr>Input File: omh/det_by_lu_hpp.omh

</body>
</html>
